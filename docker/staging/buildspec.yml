version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - echo AWS resource download
      - aws s3 cp s3://blog2025-stg-s3-private/build/aws_user.log ./docker/staging/aws_user.log

      - echo Logging in to Amazon ECR...
      - source ./docker/staging/aws_user.log
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - echo Backend S3 resource download
      - aws s3 cp --recursive s3://blog2025-stg-s3-private/build/backend/app_utility/ ./docker/staging/backend/app_utility/
      - aws s3 cp s3://blog2025-stg-s3-private/build/backend/hibernate.cfg.xml ./src/main/resources/staging/hibernate.cfg.xml

      - echo Frontend S3 resource download
      - aws s3 cp s3://blog2025-stg-s3-private/build/frontend/nginx/conf.d/.htpasswd ./docker/staging/frontend/conf.d/.htpasswd

  build:
    commands:
      - echo Build started on `date`

      - echo Backend Docker image build
      - docker build --no-cache -t blog-proj-staging-backend -f docker/staging/backend/Dockerfile .
      - docker tag blog-proj-staging-backend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/staging/blog-proj-staging-backend:latest

      - echo Frontend Docker image build
      - docker build --no-cache -t blog-proj-staging-frontend -f docker/staging/frontend/Dockerfile .
      - docker tag blog-proj-staging-frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/staging/blog-proj-staging-frontend:latest

  post_build:
    commands:
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/staging/blog-proj-staging-backend:latest
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/staging/blog-proj-staging-frontend:latest
artifacts:
  files:
